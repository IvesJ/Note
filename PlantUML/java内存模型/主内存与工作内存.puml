@startuml

主内存 -> 工作内存 : read（作用于主内存中的变量，将主内存的值传输至工作内存中，以便load操作）

工作内存 -> 工作内存: load（作用于工作内存变量，将read操作得到的变量值放入工作内存中的变量副本中）

工作内存 -> 执行引擎: use（作用于工作内存变量，将工作内存中的变量值传递至执行引擎）

执行引擎 --[#green]> 工作内存: 返回执行结果

工作内存 --[#green]> 工作内存: assign（作用于工作内存变量，将从执行引擎接收的值，赋值给工作内存变量）

工作内存 --[#green]> 主内存: store（作用于工作内存变量， 将该工作内存变量传递至主内存中，以便write操作）

主内存 -> 主内存: write（作用于主内存变量，将store操作得到的变量值放入主内存变量中）

legend center
1、拷贝【主内存数据拷贝至工作内存】:
    顺序执行 read 和 load 操作，且 read 和 load 不可单独出现，即：不允许从读取了主内存数据但工作内存不接受
2、同步【工作内存数据同步至主内存】:
    顺序执行 store 和 write 操作，且 store 和 write 不可单独出现， 即：不允许工作内存发起回写但主内存不接受
3、工作内存中改变了从主内存读取载入的数据，必须把变化同步回主内存，即：不允许一个线程丢弃最近的 assign 操作
end legend

@enduml